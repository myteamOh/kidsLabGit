<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kidslab.client.requestcourse.dao.RequestCourseDao">

	<!-- 강의정보 기본 조회 -->
	<sql id="courseSearch">
		select course_no,
		course_summary, course_name, course_subject,
		course_level,
		course_time, course_totalperson, course_room,
		course_plan, course_pay,
		course_registerdate,
		course_status,
		course_startdate,
		course_enddate, a.teacher_no,
		b.teacher_name
		from
		course a inner join teacher b on a.teacher_no =
		b.teacher_no
		<where>
			course_status like '모집중'
			<if test="course_level == 'all'">
				and 1=1
			</if>
			<if test="course_level == 'eleJunior'">
				and course_level like '1~2학년'
			</if>
			<if test="course_level == 'eleMiddle'">
				and course_level like '3~4학년'
			</if>
			<if test="course_level == 'eleSenior'">
				and course_level like '5~6학년'
			</if>
		</where>
	</sql>

	<select id="requestCourseList" parameterType="adminCourse"
		resultType="adminCourse">
		select course_no,
		course_summary, course_name, course_subject,
		course_level,
		course_time, course_totalperson, course_room,
		course_plan, course_pay,
		to_char(course_registerdate, 'yyyy-mm-dd') as
		course_registerdate,
		course_status,
		to_char(course_startdate,'yyyy-mm-dd') as
		course_startdate,
		to_char(course_enddate, 'yyyy-mm-dd') as
		course_enddate, teacher_no,
		teacher_name
		FROM(
		select list.*, rownum as rnum
		from(
		<include refid="courseSearch"></include>
		order by course_no asc
		) list
		)
		<where>
			<if test="start_row != null and start_row != ''">
				<if test="end_row != null and end_row != ''">
					rnum between #{start_row} and #{end_row}
				</if>
			</if>
		</where>
	</select>

	<select id="requestCourseDetail" parameterType="adminCourse"
		resultType="adminCourse">
		SELECT course_no,
		course_summary, course_name,
		course_subject,
		course_level,
		course_time, course_totalperson,
		course_room,
		course_plan, course_pay,
		to_char(course_registerdate,
		'yyyy-mm-dd') as
		course_registerdate,
		course_status,
		to_char(course_startdate,'yyyy-mm-dd') as course_startdate,
		to_char(course_enddate,'yyyy-mm-dd') as course_enddate,
		a.teacher_no,
		b.teacher_name
		FROM
		course a inner join teacher b on a.teacher_no =
		b.teacher_no
		WHERE
		course_no = #{course_no}
	</select>

	<select id="requestCourseCount" parameterType="adminCourse"
		resultType="requestCourse">
		SELECT requestcourse_no, requestcourse_paymethod,
		requestcourse_payamount, requestcourse_paymentdate,
		requestcourse_paymentstatus, requestcourse_accountholder,
		requestcourse_accountnumber, requestcourse_refundcharge,
		requestcourse_refundbank, parent_no, student_no, course_no
		FROM
		requestcourse
		WHERE course_no = #{course_no}
	</select>

	<insert id="requestCourseInsert" parameterType="requestCourse">

		<selectKey keyProperty="requestcourse_no" resultType="int"
			order="BEFORE">
			SELECT requestcourse_seq.nextval FROM DUAL
		</selectKey>

		INSERT INTO requestcourse(requestcourse_no, requestcourse_paymethod,
		requestcourse_payamount, parent_no, student_no, course_no)
		VALUES(#{requestcourse_no}, #{requestcourse_paymethod},
		#{requestcourse_payamount}, #{parent_no}, #{student_no},
		#{course_no})
	</insert>

	<select id="reCourseSelectByNo" parameterType="requestCourse"
		resultType="requestCourse">
		SELECT *
		FROM parent p
		INNER JOIN student s ON p.parent_no =
		s.parent_no
		INNER JOIN requestcourse rc ON s.student_no = rc.student_no
		INNER JOIN course c ON rc.course_no = c.course_no
		INNER JOIN teacher t
		ON c.teacher_no = t.teacher_no
		WHERE rc.parent_no =
		#{parent_no} and
		rc.student_no = #{student_no} and rc.course_no =
		#{course_no}
	</select>

</mapper>
