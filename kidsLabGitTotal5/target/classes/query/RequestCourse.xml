<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kidslab.client.requestcourse.dao.RequestCourseDao">

	<!-- 통합조회 -->
	<sql id="totalSearch">
		SELECT rc.parent_no, parent_id, parent_name, parent_phone,
		parent_termsagree, parent_kakaoagree, parent_smsagree,
		parent_emailagree, parent_status, to_char(parent_registerdate,
		'yyyy-mm-dd') AS parent_registerdate,
		parent_knowroute, parent_address,
		rc.student_no, student_id, student_name, student_gender,
		student_school, to_char(student_birthday, 'yyyy-mm-dd') AS
		student_birthday, student_reference,
		to_char(student_registerdate,
		'yyyy-mm-dd') AS student_registerdate, student_evaluation,
		student_status,
		requestcourse_no, requestcourse_paymethod,
		requestcourse_payamount,
		to_char(requestcourse_paymentdate,
		'yyyy-mm-dd') AS requestcourse_paymentdate,
		requestcourse_paymentstatus, requestcourse_accountholder,
		requestcourse_accountnumber, requestcourse_refundcharge,
		requestcourse_refundbank, rc.course_no, course_summary, course_name,
		course_subject, course_level, course_time, course_totalperson,
		course_room, course_plan, course_pay,
		to_char(course_registerdate,
		'yyyy-mm-dd') AS course_registerdate, course_status,
		to_char(course_startdate,'yyyy-mm-dd') AS course_startdate,
		to_char(course_enddate,'yyyy-mm-dd') AS course_enddate, c.teacher_no,
		teacher_id, teacher_name, teacher_phone, teacher_photo,
		to_char(teacher_registerdate, 'yyyy-mm-dd') AS
		teacher_registerdate,
		teacher_thumb, teacher_status
		FROM parent p INNER JOIN student s ON
		p.parent_no = s.parent_no INNER JOIN requestcourse rc ON s.student_no
		= rc.student_no INNER JOIN course c ON rc.course_no =
		c.course_no INNER
		JOIN teacher t ON c.teacher_no = t.teacher_no
	</sql>

	<!-- 강의정보 기본 조회 -->
	<sql id="courseSearch">
		select course_no,
		course_summary, course_name, course_subject,
		course_level,
		course_time, course_totalperson, course_room,
		course_plan, course_pay,
		course_registerdate,
		course_status,
		course_startdate,
		course_enddate, a.teacher_no,
		b.teacher_name
		from
		course a inner join teacher b on a.teacher_no =
		b.teacher_no
		<where>
			course_status like '모집중'
			<if test="course_level == 'all'">
				and 1=1
			</if>
			<if test="course_level == 'eleJunior'">
				and course_level like '1~2학년'
			</if>
			<if test="course_level == 'eleMiddle'">
				and course_level like '3~4학년'
			</if>
			<if test="course_level == 'eleSenior'">
				and course_level like '5~6학년'
			</if>
		</where>
	</sql>

	<select id="requestCourseList" parameterType="course"
		resultType="course">
		select course_no,
		course_summary, course_name, course_subject,
		course_level,
		course_time, course_totalperson, course_room,
		course_plan, course_pay,
		to_char(course_registerdate, 'yyyy-mm-dd') as
		course_registerdate,
		course_status,
		to_char(course_startdate,'yyyy-mm-dd') as
		course_startdate,
		to_char(course_enddate, 'yyyy-mm-dd') as
		course_enddate, teacher_no,
		teacher_name
		FROM(
		select list.*, rownum as rnum
		from(
		<include refid="courseSearch"></include>
		order by course_no asc
		) list
		)
		<where>
			<if test="start_row != null and start_row != ''">
				<if test="end_row != null and end_row != ''">
					rnum between #{start_row} and #{end_row}
				</if>
			</if>
		</where>
	</select>

	<select id="requestCourseDetail" parameterType="course"
		resultType="course">
		SELECT course_no,
		course_summary, course_name,
		course_subject,
		course_level,
		course_time, course_totalperson,
		course_room,
		course_plan, course_pay,
		to_char(course_registerdate,
		'yyyy-mm-dd') as
		course_registerdate,
		course_status,
		to_char(course_startdate,'yyyy-mm-dd') as course_startdate,
		to_char(course_enddate,'yyyy-mm-dd') as course_enddate,
		a.teacher_no,
		b.teacher_name
		FROM
		course a inner join teacher b on a.teacher_no =
		b.teacher_no
		WHERE
		course_no = #{course_no}
	</select>

	<select id="requestCourseCount" parameterType="course"
		resultType="requestCourse">
		SELECT requestcourse_no, requestcourse_paymethod,
		requestcourse_payamount, requestcourse_paymentdate,
		requestcourse_paymentstatus, requestcourse_accountholder,
		requestcourse_accountnumber, requestcourse_refundcharge,
		requestcourse_refundbank, parent_no, student_no, course_no
		FROM
		requestcourse
		WHERE course_no = #{course_no}
	</select>

	<insert id="requestCourseInsert" parameterType="requestCourse">

		<selectKey keyProperty="requestcourse_no" resultType="int"
			order="BEFORE">
			SELECT requestcourse_seq.nextval FROM DUAL
		</selectKey>

		INSERT INTO requestcourse(requestcourse_no, requestcourse_paymethod,
		requestcourse_payamount, parent_no, student_no, course_no)
		VALUES(#{requestcourse_no}, #{requestcourse_paymethod},
		#{requestcourse_payamount}, #{parent_no}, #{student_no},
		#{course_no})
	</insert>

	<select id="reCourseSelectByNo" parameterType="requestCourse"
		resultType="requestCourse">
		<include refid="totalSearch"></include>
		<where>
			<choose>
				<when test="parent_no != null and parent_no != ''">
					rc.parent_no = #{parent_no}
					<if test="student_no != null and student_no != ''">
						and rc.student_no = #{student_no}
						<if test="course_no != null and course_no != ''">
							and rc.course_no = #{course_no}
						</if>
					</if>
				</when>

				<when test="student_no != null and student_no != ''">
					rc.student_no = #{student_no}
					<if test="course_status != null and course_status != ''">
						and c.course_status = #{course_status}
						<if
							test="requestcourse_paymentstatus != null and requestcourse_paymentstatus != ''">
							and requestcourse_paymentstatus =
							#{requestcourse_paymentstatus}
						</if>
					</if>
				</when>

				<when test="requestcourse_no != null and requestcourse_no != ''">
					requestcourse_no = #{requestcourse_no}
				</when>

				<otherwise>
					rc.student_no = #{student_no}
				</otherwise>
			</choose>
		</where>
		ORDER BY requestcourse_no ASC
	</select>

	<delete id="requestCourseDelete" parameterType="int">
		DELETE FROM
		requestcourse
		WHERE requestcourse_no = #{requestcourse_no}
	</delete>

	<select id="reCourseSelectOne" parameterType="requestCourse"
		resultType="requestCourse">
		<include refid="totalSearch"></include>
		WHERE requestcourse_no =
		#{requestcourse_no}
		ORDER BY requestcourse_no
		ASC
	</select>

	<update id="refundApply" parameterType="requestCourse">
		UPDATE requestcourse
		SET
		requestcourse_refundbank = #{requestcourse_refundbank},
		requestcourse_accountnumber = #{requestcourse_accountnumber},
		requestcourse_accountholder = #{requestcourse_accountholder},
		requestcourse_refundcharge = #{requestcourse_refundcharge},
		requestcourse_paymentstatus = '환불대기',
		requestcourse_refunddate =
		sysdate
		WHERE
		requestcourse_no =
		#{requestcourse_no}
	</update>

	<select id="withdrawCheck" parameterType="parent" resultType="requestCourse">
		<include refid="totalSearch"></include>
		WHERE rc.parent_no = #{parent_no} AND requestcourse_paymentstatus !=
		'환불완료' OR rc.parent_no = #{parent_no} AND c.course_status != '강의종료'
	</select>

	<select id="refundList" parameterType="parent" resultType="requestCourse">
		select requestcourse_paymentstatus, s.student_name, c.course_name,
		p.parent_no,
		requestcourse_payamount,
		requestcourse_accountholder,
		requestcourse_accountnumber,
		requestcourse_refundcharge,
		requestcourse_refundbank,
		to_char(requestcourse_paymentdate,
		'yyyy-mm-dd') as requestcourse_paymentdate,
		to_char(requestcourse_paycompletedate, 'yyyy-mm-dd') as
		requestcourse_paycompletedate,
		to_char(requestcourse_refunddate,
		'yyyy-mm-dd') as
		requestcourse_refunddate,
		to_char(requestcourse_refundcomplete, 'yyyy-mm-dd') as
		requestcourse_refundcomplete
		from requestcourse
		r inner join student s
		on r.student_no=s.student_no
		inner join course c
		on r.course_no =
		c.course_no
		inner join parent p on r.parent_no =
		p.parent_no
		where
		(r.requestcourse_paymentstatus = '환불완료' or
		r.requestcourse_paymentstatus = '환불대기') and
		r.parent_no = #{parent_no}
	</select>

</mapper>
