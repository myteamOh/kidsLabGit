<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kidslab.admin.course.dao.CourseDao">

	<!-- 강의정보 기본 조회 -->
	<sql id="courseCommon">
		select course_no,
		course_summary, course_name, course_subject,
		course_level,
		course_time, course_totalperson, course_room,
		course_plan, course_pay,
		course_registerdate,
		course_status,
		course_startdate,
		course_enddate, a.teacher_no,
		b.teacher_name
		from
		course a inner join teacher b on a.teacher_no =
		b.teacher_no
		<where>
			<if test="search=='teacher_name'">
				<![CDATA[ teacher_name like '%' || #{keyword} || '%']]>
				<if test="course_status=='all'">
					and 1=1
				</if>
				<if test="course_status=='registwaiting'">
					and course_status like '등록대기'
				</if>
				<if test="course_status=='agreewaiting'">
					and course_status like '승인대기'
				</if>
				<if test="course_status=='recruiting'">
					and course_status like '모집중'
				</if>
				<if test="course_status=='progressing'">
					and course_status like '진행중'
				</if>
				<if test="course_status=='cancel'">
					and course_status like '폐강'
				</if>
				<if test="course_status=='end'">
					and course_status like '강의종료'
				</if>
			</if>
			<if test="search=='all'">
				<![CDATA[1=1]]>
				<if test="course_status=='all'">
					and 1=1
				</if>
				<if test="course_status=='registwaiting'">
					and course_status like '등록대기'
				</if>
				<if test="course_status=='agreewaiting'">
					and course_status like '승인대기'
				</if>
				<if test="course_status=='recruiting'">
					and course_status like '모집중'
				</if>
				<if test="course_status=='progressing'">
					and course_status like '진행중'
				</if>
				<if test="course_status=='cancel'">
					and course_status like '폐강'
				</if>
				<if test="course_status=='end'">
					and course_status like '강의종료'
				</if>
			</if>
		</where>
	</sql>
	<!-- <select id="courseList" resultType="adminCourse"> select course_no, 
		course_summary, course_name, course_subject, course_level, course_time, course_totalperson, 
		course_room, course_plan, course_pay, to_char(course_registerdate, 'yyyy-mm-dd') 
		as course_registerdate, course_status, to_char(course_startdate,'yyyy-mm-dd') 
		as course_startdate, to_char(course_enddate, 'yyyy-mm-dd') as course_enddate, 
		a.teacher_no, b.teacher_name FROM course a, teacher b where a.teacher_no 
		= b.teacher_no order by course_no asc </select> -->
	<!-- 특정 강사에 대한 강의 리스트 -->
	<select id="teacherCourseList" resultType="course"
		parameterType="int">
		select course_no, course_name, course_subject,
		to_char(course_startdate,'yyyy-mm-dd') as
		course_startdate,
		to_char(course_enddate, 'yyyy-mm-dd') as
		course_enddate, teacher_no
		from course
		where teacher_no = ${teacher_no} and course_status = '진행중'
	</select>
	<!-- 특정 강의에 대한 학생 리스트 -->
	<select id="courseStudentList" resultType="student"
		parameterType="int">
		select r.student_no, student_id as userId, student_name,
		student_gender,
		student_school,
		to_char(student_birthday,
		'yyyy-mm-dd')
		as
		student_birthday, student_reference,
		to_char(student_registerdate,'yyyy-mm-dd') as
		student_registerdate,
		student_status, p.parent_name, p.parent_phone, s.parent_no,
		c.course_name
		from student
		s,parent p, requestcourse r, course c
		<where>
			r.student_no = s.student_no and p.parent_no = r.parent_no and
			c.course_no = r.course_no and r.course_no = #{course_no}
		</where>
	</select>

	<!-- 페이징 후 게시물 전체 조회 -->
	<select id="courseList" resultType="course" parameterType="course">
		select course_no,
		substr(course_summary, 1, 10) as course_summary,
		course_name, course_subject,
		course_level,
		course_time,
		course_totalperson, course_room,
		substr(course_plan,1,14) as
		course_plan, course_pay,
		to_char(course_registerdate, 'yyyy-mm-dd') as
		course_registerdate,
		course_status,
		to_char(course_startdate,'yyyy-mm-dd') as
		course_startdate,
		to_char(course_enddate, 'yyyy-mm-dd') as
		course_enddate, teacher_no,
		teacher_name
		FROM(
		select list.*, rownum as
		rnum
		from(
		<include refid="courseCommon"></include>
		order by course_status desc
		) list
		)
		<where>
			<if test="start_row != null and start_row != ''">
				<if test="end_row != null and end_row != ''">
					rnum between #{start_row} and #{end_row}
				</if>
			</if>
		</where>
	</select>

	<!-- 강의 총 카운트 -->
	<select id="courseListCnt" parameterType="course" resultType="int">
		<!-- Course - courseListCnt -->
		select nvl(count(1), 0)
		from(
		select list.*, rownum as rnum
		from(
		<include refid="courseCommon"></include>
		order by course_no desc
		) list
		)
	</select>

	<!-- 상세 페이지를 위한 게시물 조회 -->
	<select id="courseDetail" parameterType="int" resultType="course">
		<!-- Course - courseDetail -->
		select course_no,
		course_summary, course_name, course_subject,
		course_level,
		course_time, course_totalperson, course_room,
		course_plan, course_pay,
		to_char(course_registerdate, 'yyyy-mm-dd') as
		course_registerdate,
		course_status,
		to_char(course_startdate,'yyyy-mm-dd') as course_startdate,
		to_char(course_enddate,'yyyy-mm-dd') as course_enddate,
		a.teacher_no,
		b.teacher_name
		from
		course a inner join teacher b on a.teacher_no =
		b.teacher_no
		where
		course_no = #{course_no}
	</select>

	<!-- 게시물 수정 -->
	<update id="courseUpdate" parameterType="course">
		<!-- Course - courseUpdate -->
		update course
		set
		course_name = #{course_name},
		course_subject =
		#{course_subject},
		course_level = #{course_level},
		course_time =
		#{course_time},
		course_room = #{course_room},
		course_pay =
		#{course_pay},
		course_status =
		<if test="course_status=='registwaiting'">
			'등록대기'
		</if>
		<if test="course_status=='agreewaiting'">
			'승인대기'
		</if>
		<if test="course_status=='recruiting'">
			'모집중'
		</if>
		<if test="course_status=='progressing'">
			'진행중'
		</if>
		<if test="course_status=='cancel'">
			'폐강'
		</if>
		<if test="course_status=='end'">
			'강의종료'
		</if>
		, course_startdate = #{course_startdate},
		course_enddate =
		#{course_enddate},
		course_summary = #{course_summary},
		<if test="course_plan != ''">
			course_plan =
			#{course_plan},
		</if>
		course_registerdate = sysdate
		where
		course_no =
		#{course_no}
	</update>

	<!-- 삭제 -->
	<delete id="courseDelete" parameterType="course">
		<!-- Course - courseDelete -->
		delete from
		course
		where course_no = #{course_no}
	</delete>
</mapper>
